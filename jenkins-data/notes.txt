192.168.0.103 
sudo chown -R 1000:1000 jenkins_home (set owner ship to user used by docker)
f0f2ccee-acf7-419e-a9f5-62d508f5c5d6 (directory uuid)
Thevenus987$

docker cp remote-key jenkins:/tmp/remote-key (this command is used to copy file from external host to the running container)


ssh -i remote-key user@host (this command is used to connect to a user of a host by using private key instead of password)

If you are attempting to add a container to an existing network that no longer exists, then you can use docker-compose up --force-recreate. I found this GitHub issues comment to be a helpful overview.




use this command to generate ssh keys "ssh-keygen -t rsa -m PEM -f remote-key"
instead of using the normal one in linux otherwise you will face issues in jenkins while making connection to the ssh server


take backup fo a database using mysqldump command

 mysqldump -u root  -p -h db_host --all-databases > /tmp/db_backup.sql


upload backup to s3 using command after configuration
 aws s3 cp /tmp/db_backup.sql  s3://myjenkins-db-backup/backup_manual_1.sql
for f in $(find /tmp -name '*.pdf' -or -name '*.doc'); do rm $f; done

